<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-11-12T23:40:58-08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">StackExplorer</title><subtitle>Purpose of this blog is to get you familiar with the everyday use, fundamentals and trends in software development. I know it sounds ambitious, its along journey ahead - one step at a time, Lets Explore!</subtitle><entry><title type="html">Binary search primer</title><link href="http://localhost:4000/algo/2018/11/13/binary-search.html" rel="alternate" type="text/html" title="Binary search primer" /><published>2018-11-13T00:00:00-08:00</published><updated>2018-11-13T00:00:00-08:00</updated><id>http://localhost:4000/algo/2018/11/13/binary-search</id><content type="html" xml:base="http://localhost:4000/algo/2018/11/13/binary-search.html">&lt;p&gt;Binary search is an algorithm used to search for an element in log(n) time.&lt;/p&gt;

&lt;p&gt;Recursive implementation:&lt;/p&gt;

&lt;p&gt;Iterative implementation:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;binarySearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  	    &lt;span class=&quot;n&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	    &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Not found :(
&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Binary search problems:&lt;/p&gt;</content><author><name></name></author><category term="algo" /><category term="algorithm" /><category term="binary search" /><category term="concepts" /><summary type="html">Binary search is an algorithm used to search for an element in log(n) time.</summary></entry><entry><title type="html">Welcome to StackExplorer!</title><link href="http://localhost:4000/welcome/2018/11/12/welcome-to-stack-explorer.html" rel="alternate" type="text/html" title="Welcome to StackExplorer!" /><published>2018-11-12T21:28:56-08:00</published><updated>2018-11-12T21:28:56-08:00</updated><id>http://localhost:4000/welcome/2018/11/12/welcome-to-stack-explorer</id><content type="html" xml:base="http://localhost:4000/welcome/2018/11/12/welcome-to-stack-explorer.html">&lt;p&gt;Welcome to StackExplorer!&lt;/p&gt;

&lt;p&gt;A blog for developers who wants to learn and explore the basics of full stack development. Purpose of this blog is to get you familiar with the everyday use, fundamentals and trends in software development. I know it sounds ambitious, its along journey ahead - one step at a time.&lt;/p&gt;

&lt;p&gt;Focus areas will be the following three:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fundamentals - Algorithms and System design.&lt;/li&gt;
  &lt;li&gt;Cloud - AWS, Google Cloud Platform and Microsoft Azure
New services, concepts and how a developer can leverage&lt;/li&gt;
  &lt;li&gt;Developer tools - Languages, frameworks which will enable you for rapid development
Languages (Such as Python, Java etc), frameworks (Such as Angular), database concepts. We do not limit to a single language, instead we focus on the concepts and choose a language to explain them. We cover web, mobile and AI applications.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We cover anything you need to become a fullstack developer. Stick around and subscribe to RSS feeds, we will guarantee a enjoyable ride!&lt;/p&gt;</content><author><name></name></author><summary type="html">Welcome to StackExplorer!</summary></entry></feed>